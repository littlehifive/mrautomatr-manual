[["index.html", "TIES Measurement Report Automation Project 1 Project overview", " TIES Measurement Report Automation Project Michael Wu 2021-03-30 1 Project overview This project is developed to generate lengthy but informative measurement reports from survey data and Mplus measurement model outputs for projects at NYU Global TIES for Children. Typically, a research institute like TIES has the obligation to generate detailed measurement reports to better inform the funders and the cooperating agencies about its most up-to-date work. However, even with a Word template, the process from analytical results to a publishable report is unnecessarily inefficent and prone to mistakes even for the most careful research assistant. Therefore, we develop an R package called mrautomatr to be used in conjunction with Rstudio to address this issue. Currently, the project only suits the need of NYU Global TIES, where we can impose naming rules for files and variables and most people use Mplus for measurement modeling and STATA for other analyses. Future adaptations are needed as people move their analysis to R. The project workflow is shown below: the users specify parameters in a Microsoft Excel sheet and move several files to a destined folder, run a command in R, and (boom!) there is a well-formatted measurement report in Microsoft Word (powered by the flextable &amp; rmarkdown R packages). We chose Word over LaTex (which generates pdf files) and html (which generates web pages) simply to minimize the confusion around writing codes in R, which takes a long time to learn. After generating the reproducible parts of the report, feel free to rename it and manually edit the sections that are text-heavy. Check out an example rendered report here. Check out the TIES R workshop series and Yihui Xie’s Rmarkdown book if you’d like to learn some necessary tools to customize your reporting formats using R. "],["set-up-the-package.html", "2 Set up the package 2.1 Install the necessary softwares 2.2 Download and install the mrautomatr package", " 2 Set up the package 2.1 Install the necessary softwares You need to set up R and Rstudio on your computer before everything. R is the programming language that powers this project, and Rstudio is the interface that allows you better interact with your R code. Please follow the steps below: Download R here and install it before you install Rstudio. Download Rstudio here and install it. Open Rstudio, and click the first icon from the left on the Rstudio toolbar, and select R Markdown. Rstudio will prompt you to install several packages, just follow the instructions and install them. 2.2 Download and install the mrautomatr package Run the following lines: install.packages(&quot;usethis&quot;) install.packages(&quot;devtools&quot;) library(usethis) library(devtools) Set up your GitHub Personal Auth Token set following instructions on this website. This is only applicable to this package right now since it’s internal and private. You may need to email Patrick Anker in order to gain access to the TIES github repository. Run the following line: devtools::install_github(&quot;nyuglobalties/mrautomatr&quot;) library(mrautomatr) Check out the functions by running ?function_name, e.g.: ?mrautomatr "],["set-up-the-parameters.html", "3 Set up the parameters 3.1 Organize your model outputs 3.2 Fill in the Excel template", " 3 Set up the parameters 3.1 Organize your model outputs Before you run any R codes, you need to make sure that the parameters for the report are correctly specified. First, copy and paste all currently available final Mplus models (only the .out files) into one folder (e.g. a folder called Measurement report/Models somewhere on Box). This includes: EFA models CFA models Longitudinal invariance models Treatment invariance models Age invariance models Gender invariance models 3.2 Fill in the Excel template Second, fill in the Excel sheet template that we provide. This Excel file is downloaded along with the mrautomatr package. You can find its file path on your computer by running system.file(\"templates\", \"input_template.xlsx\", package = \"mrautomatr\") in R. Copy and paste it somewhere in your computer (e.g. a folder called Measurement report/template). Alternatively, you can also find this template (input_template.xlsx) located in inst/templates/ in the package GitHub repository. Simply hit Download to download the template and store somewhere in your computer. In this template, you need to manually type in the following parameters. For any parameters that are not available temporarily, you can leave blank and still be able to generate the report (with errors in the Word document telling you that you need to specify more parameters to have a full report). 3.2.1 Tab 1: path A shorthand to get file path on Mac: go to the path/file and hit command + option + C. year will show up in the first line of your document (not the title). measure will show up in the first line of your document. data_file_path should be wherever the final master data is located. It will be used to calculate summary statistics and bivariate correlations. Our tool currently takes the following data formats: .csv, .xlsx, .dta. fs_data_file_path refers to the file path where the tabular data of the Mplus-generated factor scores is saved. Because Mplus does not generate a spreadsheet, you will need to: (1) copy and paste the factor scores into an Excel sheet, and (2) insert the first row and name the variables exactly the same as they are in your master dataset and in your other Mplus models. (3) save the sheet either as a .csv or an .xlsx file. model_file_path leads you to all the Mplus outputs. 3.2.2 Tab 2: subscale The first row should contain the subscale/factor names. They should be the same as the ones in your Mplus models. For each subscale/factor, list the items. The rows can be of unequal length (i.e. you can leave blanks for subscales with smaller number of items). These are specified to generate reliability estimates from the master dataset. 3.2.3 Tab 3: model This specifies all necessary Mplus model names (i.e. xxx.out). List all available models in the order of waves (e.g. wave 1 before wave 2). There is no restrictions on the file names, but please follow the naming rules for reproducibility purposes. 3.2.4 Tab 4: description This is specified to have a description of the items at the beginning of the report. You can format this tab in any ways that you like, but the caveat is that (1) the first row will be taken as the header and set to bold, and (2) you cannot merge cells. Variable name Description year Study site and year measure Measure name data_file_path Local file path to the master dataset on your own computer fs_data_file_path Local file path to the factor score dataset on your own computer model_file_path Local file path to all the Mplus .out files subscale Subscales and their corresponding items model_efa EFA models model_cfa CFA models model_inv_tx Treatment invariance models model_inv_gender Gender invariance models model_inv_age Age invariance models model_inv_lg Longitudinal invariance model description Detailed item descriptions "],["generate-the-report.html", "4 Generate the report 4.1 render_report() 4.2 render_report_manual() 4.3 render_report_multiple()", " 4 Generate the report After carefully setting your parameters, you can now generate your report! There are three ways to generate reports: Generate one report for one measure using the default settings render_report() Generate one report for one measure using customized settings by the users render_report_manual() Generate multiple separate reports for multiple measures using default settings render_report_multiple() After generating the report, make sure to rename it and manually edit the sections that are text-heavy. The renaming is necessary because you may accidentally overwrite your manual edits if you regenerate the report in R. Rmarkdown is not powerful yet to allow back-translation from Word to R codes, so your manual changes in Word will NOT be reflected in the R codes when you regenerate the report for some reasons (e.g. wrong file names). So we recommend finalizing the tables and plots before you write texts in the Word document (or you can just store the texts in another and move them over to the master report whenever you feel ready). 4.1 render_report() Run ?render_report() to see what each argument represents. Example: render_report(input_dir = &quot;/Users/michaelfive/Google Drive/NYU/3EA/test&quot;, template = &quot;input_template_lebanon_cs.xlsx&quot;, index = &quot;lebanon_cs&quot;, title = &quot;Lebanon Year 1 (2016-2017)&quot;, output_dir = &quot;/Users/michaelfive/Google Drive/NYU/3EA/test&quot;) This function renders one report for the specified measure. 4.2 render_report_manual() Run ?render_report_manual() to see what each argument represents. Example: render_report_manual(index = &quot;lebanon_cs&quot;, output_dir = &quot;/Users/michaelfive/Google Drive/NYU/3EA/test&quot;) This function opens a Shiny web page where you can click/unclick sections you’d like to include/exclude in the report (see descriptions below). It also renders one report for the specified measure. Parameters Description printcode whether you’d like R codes to be printed in your document printwarning whether you’d like to print warnings in running the codes storecache whether you’d like to store knitr cache (only for programming purposes, see here) set_title title set_author author template parameter template file path item print item descriptions descriptive print descriptive statistics table ds_plot print descriptive statistics histograms correlation_matrix_lg print factor-level correlation matrix from longitudinal invariance model correlation_matrix_bivar print factor-level correlation matrix from master dataset correlation_matrix_item print item-level correlation matrix from master dataset (set to FALSE because correlations among dozens of items may be unnecessary) efa_screeplot print EFA screeplot at all waves cfa_model_fit print CFA model fits at all waves cfa_model_plot print CFA model path diagram (for the first specified CFA model; i.e. Time 1; assuming factor structure does not change) cfa_model_parameters print CFA model parameters at all waves (factor loadings and thresholds) cfa_r2 print CFA model R-squared at all wave internal_reliability print estimates of internal reliability (Cronbach’s Alpha and McDonald’s Omega, descriptions of the other indices can be found here) summary_item_statistics print summary item statistics (descriptions of the other indices can be found here) item_total_statistics print total item statistics (descriptions of the other indices can be found here) inv_tx print model fits for treatment invariance models at all waves inv_gender print model fits for gender invariance models at all waves inv_age print model fits for age invariance models at all waves inv_lg print model fit for the longitudinal invariance model 4.3 render_report_multiple() Run ?render_report_multiple() to see what each argument represents. Example: render_report_multiple(input_dir = &quot;/Users/michaelfive/Google Drive/NYU/3EA/test&quot;, templates = c(&quot;input_template_lebanon_cs.xlsx&quot;, &quot;input_template_niger_psra.xlsx&quot;), output_dir = &quot;/Users/michaelfive/Google Drive/NYU/3EA/test&quot;) This function renders multiple reports at the same time. "],["individual-functions.html", "5 Individual functions", " 5 Individual functions If you are an R user who wishes to run individual functions in this package to get results in R instead of Word, you can check the help pages of those functions by running ?mrautomatr. "]]
